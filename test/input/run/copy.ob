MODULE m;

TYPE
	T1 = RECORD
		i1: INTEGER;
		proc1: PROCEDURE
	END;

	MixPointersAndRecords = RECORD
		r: T1;
		p: POINTER TO T1
	END;

	Arrays = RECORD
		aIntegers: ARRAY 3 OF INTEGER;
		aRecords: ARRAY 5 OF T1;
		aChars: ARRAY 7 OF ARRAY 10 OF CHAR
	END;

VAR
	a1: ARRAY 3 OF T1;
	a2: ARRAY 3 OF T1;

PROCEDURE proc1;
END proc1;

PROCEDURE proc2;
END proc2;

PROCEDURE testPointerAndRecordFieldsCopy();
VAR
	r1, r2: MixPointersAndRecords;
BEGIN
	NEW(r1.p);
	NEW(r2.p);
	r1 := r2;
	ASSERT(r1.p = r2.p);
END testPointerAndRecordFieldsCopy;

PROCEDURE testRecordArraysCopy();
VAR
	r1, r2: Arrays;
BEGIN
	r2.aIntegers[0] := 1;
	r2.aIntegers[1] := 2;
	r2.aIntegers[2] := 3;
	r2.aRecords[0].i1 := 1;
	r2.aChars[1][2] := "a";
	r1 := r2;
	ASSERT(r1.aIntegers[0] = 1);
	ASSERT(r1.aIntegers[1] = 2);
	ASSERT(r1.aIntegers[2] = 3);
	ASSERT(r1.aRecords[0].i1 = 1);
	ASSERT(r1.aChars[1][2] = "a");

	r2.aIntegers[1] := 5;
	ASSERT(r1.aIntegers[1] = 2);

	r2.aRecords[0].i1 := 3;
	ASSERT(r1.aRecords[0].i1 = 1);

	r2.aChars[1][2] := "b";
	ASSERT(r1.aChars[1][2] = "a");
END testRecordArraysCopy;

PROCEDURE testBaseCopy();
TYPE
	Base = RECORD END;
	Derived = RECORD(Base) field: INTEGER END;
VAR
	r1, r2: Derived;

	PROCEDURE copy(r1: Base; VAR r2: Base);
	BEGIN
		r2 := r1;
	END copy;

BEGIN
	r1.field := 1;
	r2.field := 2;
	copy(r1, r2);
	ASSERT(r1.field = 1);
	ASSERT(r2.field = 2);
END testBaseCopy;

BEGIN
	a1[0].i1 := 123;
	a1[0].proc1 := proc1;
	a2[1].proc1 := proc1;
	a2 := a1;
	ASSERT(a2[0].i1 = 123);
	ASSERT(a2[0].proc1 = proc1);
	ASSERT(a2[1].proc1 = NIL);

	a1[0].i1 := 345;
	a1[0].proc1 := proc2;
	ASSERT(a2[0].i1 = 123);
	ASSERT(a2[0].proc1 = proc1);

	testPointerAndRecordFieldsCopy();
	testRecordArraysCopy();
	testBaseCopy();
END m.