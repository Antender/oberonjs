MODULE m;

TYPE
	P1 = PROCEDURE(a1: INTEGER);
	P2 = PROCEDURE(): P2;

VAR
    i: INTEGER; 
	byte: BYTE;

PROCEDURE p1(arg1: INTEGER);
TYPE
    T1 = RECORD 
        field1: INTEGER END;
    T2 = RECORD (T1) 
        field2: BOOLEAN END;
VAR 
    i, j: INTEGER; 
    b: BOOLEAN;
    t1: T1;
    t2: T2;
BEGIN
    i := arg1 + 1;
    t1.field1 := i;
    t2.field1 := t1.field1;
    b := TRUE;
    t2.field2 := b
END p1;

PROCEDURE p2; BEGIN p1(123) END p2;

PROCEDURE p3(i: INTEGER): INTEGER; 
BEGIN
	p1(123);
	p2;
	p2()
	RETURN 123
END p3;

PROCEDURE p4(): INTEGER; 
	RETURN p3(123) + p3(p3(123))
END p4;

PROCEDURE p5(): P2; 
	RETURN p5
END p5;

PROCEDURE emptyBegin; BEGIN END emptyBegin;
PROCEDURE emptyBeginWithReturn(): INTEGER;
BEGIN 
	RETURN 0 
END emptyBeginWithReturn;

PROCEDURE withByteArgument(b: BYTE);
END withByteArgument;

PROCEDURE withByteResult(): BYTE;
	RETURN 0
END withByteResult;

PROCEDURE withByteResult2(b: BYTE): BYTE;
	RETURN b
END withByteResult2;

PROCEDURE withByteResult3(VAR b: BYTE): BYTE;
	RETURN b
END withByteResult3;

PROCEDURE withByteResult4(): BYTE;
VAR b: BYTE;
BEGIN
	b := 0;
	RETURN b
END withByteResult4;

PROCEDURE inner1();
    PROCEDURE inner2();
        PROCEDURE inner3();
            TYPE T = RECORD END;
        END inner3;
    END inner2;
    
    PROCEDURE inner22();
        TYPE T = RECORD END;
    END inner22;
END inner1;

BEGIN
	byte := withByteResult();
	i := withByteResult();
	withByteArgument(byte);
	byte := withByteResult2(byte);
	byte := withByteResult2(i);
	byte := withByteResult3(byte);
END m.