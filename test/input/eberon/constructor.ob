MODULE m;
TYPE
    T = RECORD
        PROCEDURE T();
    END;

    Derived = RECORD(T)
        PROCEDURE Derived();
    END;

    RecordWithField = RECORD
        PROCEDURE RecordWithField();

        i: INTEGER;
    END;

    RecordWithFieldDerived = RECORD(T)
        PROCEDURE RecordWithFieldDerived();
    END;

    RecordWithParamConstructor = RECORD
        PROCEDURE RecordWithParamConstructor(a: INTEGER);
    END;

    DerivedRecordWithParamConstructor = RECORD(RecordWithParamConstructor)
        PROCEDURE DerivedRecordWithParamConstructor();
    END;

PROCEDURE T.T();
END;

PROCEDURE Derived.Derived();
END;

PROCEDURE RecordWithField.RecordWithField();
END;

PROCEDURE RecordWithFieldDerived.RecordWithFieldDerived();
END;

PROCEDURE passAsArgument(o: T);
END;

PROCEDURE RecordWithParamConstructor.RecordWithParamConstructor(a: INTEGER);
END;

PROCEDURE DerivedRecordWithParamConstructor.DerivedRecordWithParamConstructor()
    | SUPER(123);
END;

BEGIN
    passAsArgument(T());
    r <- T();
    i <- RecordWithField().i;

    rParam <- RecordWithParamConstructor(123);
END m.