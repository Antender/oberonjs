MODULE test;

PROCEDURE testEmptyForEach();
VAR
    m: MAP OF INTEGER;
BEGIN
    FOR k, v IN m DO
        ASSERT(FALSE);
    END;
END;

PROCEDURE testForEach();
VAR
    m: MAP OF INTEGER;
BEGIN
    m["abc"] := 1;
    count <- 0;
    FOR k, v IN m DO
        ASSERT(v = 1);
        ASSERT(k = "abc");
        INC(count);
    END;
    ASSERT(count = 1);
END;

PROCEDURE testPutGet();
VAR
    m: MAP OF INTEGER;
    a: ARRAY 3 OF CHAR;
BEGIN
    m["abc"] := 1;
    m["cde"] := 2;
    ASSERT(m["abc"] = 1);
    ASSERT(m["cde"] = 2);
    a := "abc";
    ASSERT(m[a] = 1);
END;

PROCEDURE testIn();
VAR
    m: MAP OF INTEGER;
    a: ARRAY 3 OF CHAR;
BEGIN
    m["abc"] := 1;
    ASSERT("abc" IN m);
    ASSERT(~("cde" IN m));
    a := "abc";
    ASSERT(a IN m);
END;

PROCEDURE testRemove();
VAR
    m: MAP OF INTEGER;
    a: ARRAY 3 OF CHAR;
BEGIN
    m["abc"] := 1;
    m.remove("cde");
    ASSERT("abc" IN m);
    m.remove("abc");
    ASSERT(~("abc" IN m));
    
    a := "cde";
    m[a] := 1;
    ASSERT("cde" IN m);
    m.remove(a);
    ASSERT(~("cde" IN m));
END;

PROCEDURE testCopy();
TYPE
    T = RECORD
        i: INTEGER;
    END;
VAR
    m1, m2: MAP OF INTEGER;
    mr1, mr2: MAP OF T;
BEGIN
    m1["a"] := 1;
    m2 := m1;
    ASSERT(m2["a"] = 1);
    m2["a"] := 2;
    ASSERT(m1["a"] = 1);

    mr1["a"] := T();
    mr1["a"].i := 1;
    mr2 := mr1;
    ASSERT(mr2["a"].i = 1);
    mr1["a"].i := 2;
    ASSERT(mr2["a"].i = 1);
END;

PROCEDURE testClone();
TYPE
    T = RECORD
        i: INTEGER;
    END;
VAR
    m1: MAP OF INTEGER;
    mr1: MAP OF T;
BEGIN
    m1["a"] := 1;
    m2 <- m1;
    ASSERT(m2["a"] = 1);
    m2["a"] := 2;
    ASSERT(m1["a"] = 1);

    mr1["a"] := T();
    mr1["a"].i := 1;
    mr2 <- mr1;
    ASSERT(mr2["a"].i = 1);
    mr1["a"].i := 2;
    ASSERT(mr2["a"].i = 1);
END;

BEGIN
    testEmptyForEach();
    testForEach();
    testPutGet();
    testIn();
    testRemove();
    testCopy();
END test.