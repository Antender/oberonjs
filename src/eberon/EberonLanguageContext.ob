MODULE EberonLanguageContext;
IMPORT 
	EberonMap, EberonTypePromotion, Expression, LanguageContext, Types;
TYPE
	CodeTraits* = RECORD(LanguageContext.CodeTraits)
	END;

PROCEDURE CodeTraits.referenceCode(VAR info: Types.Id): STRING;
VAR
    result: STRING;
BEGIN
	IF info IS EberonTypePromotion.Variable THEN
		result := info.id();
	ELSIF (info IS EberonMap.ElementVariable) & ~info.elementType.isScalar() THEN
		result := info.rval;
	ELSE
		result := SUPER(info);
	END;
    RETURN result;
END;

PROCEDURE CodeTraits.assign(VAR info: Types.Id; right: Expression.PType): STRING;
VAR
    result: STRING;
BEGIN
	IF info IS EberonMap.ElementVariable THEN
    	result := info.lval + " = " + Expression.deref(right).code();
    ELSE
    	result := SUPER(info, right);
    END;
    RETURN result;
END;

END EberonLanguageContext.