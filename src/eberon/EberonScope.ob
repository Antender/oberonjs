MODULE EberonScope;
IMPORT Errors, JsMap, Scope, Symbols;
TYPE
    Operator = RECORD(Scope.Type)
        parent: Scope.PType
    END;

PROCEDURE Operator.name(): STRING;
    RETURN "operator"
END Operator.name;

PROCEDURE Operator.addSymbol(s: Symbols.PSymbol; exported: BOOLEAN);
BEGIN
    id <- s.id();
    found <- SELF.parent.findSymbol(id);
    IF found # NIL THEN
        Errors.raise("'" + id + "' already declared in " + found.scope().name() + " scope");
    END;
    SUPER(s, exported);
END Operator.addSymbol;

PROCEDURE makeOperator*(parent: Scope.PType; stdSymbols: JsMap.Type): Scope.PType;
VAR
    result: POINTER TO Operator;
BEGIN
    NEW(result);
    Scope.init(result^, stdSymbols);
    result.parent := parent;
    RETURN result
END makeOperator;

END EberonScope.